// Generated by CoffeeScript 1.3.3
var Chronicle, KeyMaster, canvas, context, socket;

(function() {
  var lastTime, vendors, x;
  lastTime = 0;
  vendors = ['ms', 'moz', 'webkit', 'o'];
  x = 0;
  while (x < vendors.length && !window.requestAnimationFrame) {
    window.requestAnimationFrame = window["" + vendors[x] + "RequestAnimationFrame"];
    window.cancelAnimationFrame = window["" + vendors[x] + "CancelAnimationFrame"] || window["" + vendors[x] + "CancelRequestAnimationFrame"];
    x++;
  }
  if (!window.requestAnimationFrame) {
    window.requestAnimationFrame = function(callback, element) {
      var currentTime, id, timeToCall;
      currentTime = new Date().getTime();
      timeToCall = Math.max(0, 16 - (currentTime - lastTime));
      id = window.setTimeout(function() {
        return callback(currentTime + timeToCall);
      }, timeToCall);
      lastTime = currentTime + timeToCall;
      return id;
    };
  }
  if (!window.cancelAnimationFrame) {
    return window.cancelAnimationFrame = function(id) {
      return clearTimeout(id);
    };
  }
})();

canvas = document.getElementById('game');

context = canvas.getContext('2d');

socket = new io.connect('http://localhost:8100');

KeyMaster = (function() {

  KeyMaster.UP = 'UP';

  KeyMaster.RIGHT = 'RIGHT';

  KeyMaster.DOWN = 'DOWN';

  KeyMaster.LEFT = 'LEFT';

  function KeyMaster() {
    this.Keys = {
      37: KeyMaster.LEFT,
      38: KeyMaster.UP,
      39: KeyMaster.RIGHT,
      40: KeyMaster.DOWN
    };
  }

  KeyMaster.prototype.handleStroke = function(event) {
    var keyCode;
    if (event != null) {
      keyCode = event.keyCode;
    } else {
      keyCode = window.event.keyCode;
    }
    return socket.send(this.Keys[keyCode]);
  };

  return KeyMaster;

})();

Chronicle = (function() {

  function Chronicle(players) {
    this.players = players;
  }

  return Chronicle;

})();

socket.on('news', function(data) {
  console.log(data);
  return socket.emit('my other event', {
    my: 'data'
  });
});

(function() {
  var logo, updateLogo;
  logo = $('#logo');
  if (!(logo.length > 0)) {
    return;
  }
  logo.css('opacity', 1.0);
  logo.data('blink', false);
  updateLogo = function() {
    var opacity;
    opacity = parseFloat(logo.css('opacity')).toFixed(2);
    opacity = parseFloat(opacity);
    if (logo.data().blink === true) {
      opacity += 0.02;
    } else {
      opacity -= 0.02;
    }
    if (opacity >= 1.00) {
      logo.data('blink', false);
      opacity = 1.00;
    } else if (opacity <= 0.2) {
      logo.data('blink', true);
      opacity = 0.2;
    }
    opacity = opacity.toFixed(2);
    requestAnimationFrame(updateLogo);
    return logo.css('opacity', opacity);
  };
  return updateLogo();
})();
